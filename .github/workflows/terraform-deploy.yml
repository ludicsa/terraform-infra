name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Escolha o ambiente (dev/prod)'
        required: true
        type: choice
        options:
          - dev
          - prod
      tech:
        description: 'Tech stack (Python, Node.js, etc.)'
        required: true
      url:
        description: 'URL da API Gateway'
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código do repositório `terraform-infra`
        uses: actions/checkout@v3

      - name: Checkout código do repositório `lambda-code`
        uses: actions/checkout@v3
        with:
          repository: ludicsa/lambda-code  
          path: lambda-code
          ref: master

      - name: Gerar ZIP do código da Lambda
        run: |
          cd lambda-code/src
          zip -r lambda.zip .
      
      - name: Verificar se o ZIP foi criado
        run: |
          ls -lh lambda-code/src/lambda.zip
      
      - name: Mover ZIP para o diretório do Terraform
        run: mv lambda-code/src/lambda.zip lambda.zip
  
      - name: Configurar AWS Credenciais
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Inicializar Terraform
        run: terraform init -backend-config="bucket=terraform-tfstate"

      - name: Aplicar Terraform
        run: terraform apply -auto-approve \
          -var="environment=${{ github.event.inputs.environment }}" \
          -var="api_url=${{ github.event.inputs.url }}" \
          -var="lambda_zip_path=terraform-infra/lambda.zip"
