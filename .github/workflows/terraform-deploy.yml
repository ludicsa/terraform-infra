name: Deploy Lambda

on:
  workflow_dispatch:
    inputs:
      runtime:
        description: 'Linguagem da Lambda (ex: python3.9, nodejs18.x)'
        required: true
      name:
        description: 'O nome da função Lambda'
        required: true
      env:
        description: 'Ambiente de destino'
        required: true
        type: choice
        options:
          - dev
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        run: |
          echo "Usando ambiente: ${{ inputs.env }}"
          echo "Configurando credenciais AWS..."
          echo "AWS_ACCESS_KEY_ID=${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', inputs.env)] }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', inputs.env)] }}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV

      - name: Clone lambda repository
        uses: actions/checkout@v4
        with:
          repository: 'ludicsa/lambda-code'
          path: 'lambda-code'

      - name: Compress lambda code
        run: |
          cd lambda-code/src
          zip -r ../../lambda.zip .

      - name: Install terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        run: |
          terraform init -backend-config="bucket=terraform-tfstate-878795645" \
                         -backend-config="key=terraform.tfstate" \
                         -backend-config="region=us-east-1"

      - name: Terraform plan
        run: |
          terraform plan -var "lambda_runtime=${{ inputs.runtime }}" \
                         -var "lambda_zip_file=lambda.zip" \
                         -var "lambda_name=${{ inputs.name}}"

      - name: Terrafom apply
        run: |
          terraform apply -auto-approve \
                         -var "lambda_runtime=${{ inputs.runtime }}" \
                         -var "lambda_zip_file=lambda.zip"
                         -var "lambda_name=${{ inputs.name}}"


